{"ast":null,"code":"var _jsxFileName = \"/Users/aneesansaar/Documents/Anees Documents/React Application/country-data-app/src/DataDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DataDisplay() {\n  _s();\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    // Replace 'API_URL' with the actual URL of the API you want to fetch data from.\n    const apiUrl = 'http://localhost:8000/api/countrydata/';\n    axios.get(apiUrl).then(response => {\n      setData(response.data);\n      setIsLoading(false);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n      setIsLoading(false);\n    });\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Extract the years from the data\n  const years = Object.keys(data[0]).filter(key => /^\\d{4},00$/.test(key));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"JSON Data from API\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Country Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Country Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Indicator Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Indicator Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), years.map(year => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: year\n          }, year, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item['Country Name']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item['Country Code']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item['Indicator Name']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item['Indicator Code']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), years.map(year => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item[year]\n          }, year, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this))]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(DataDisplay, \"cUIHirocPIQDoBhSWLVYEdhEgBU=\");\n_c = DataDisplay;\nexport default DataDisplay;\nvar _c;\n$RefreshReg$(_c, \"DataDisplay\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","DataDisplay","_s","data","setData","isLoading","setIsLoading","apiUrl","get","then","response","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","years","Object","keys","filter","key","test","map","year","item","index","_c","$RefreshReg$"],"sources":["/Users/aneesansaar/Documents/Anees Documents/React Application/country-data-app/src/DataDisplay.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nfunction DataDisplay() {\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // Replace 'API_URL' with the actual URL of the API you want to fetch data from.\n    const apiUrl = 'http://localhost:8000/api/countrydata/';\n\n    axios.get(apiUrl)\n      .then((response) => {\n        setData(response.data);\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        console.error('Error fetching data:', error);\n        setIsLoading(false);\n      });\n  }, []);\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  // Extract the years from the data\n  const years = Object.keys(data[0]).filter((key) => /^\\d{4},00$/.test(key));\n\n  return (\n    <div>\n      <h1>JSON Data from API</h1>\n      <table>\n        <thead>\n          <tr>\n            <th>Country Name</th>\n            <th>Country Code</th>\n            <th>Indicator Name</th>\n            <th>Indicator Code</th>\n            {years.map((year) => (\n              <th key={year}>{year}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((item, index) => (\n            <tr key={index}>\n              <td>{item['Country Name']}</td>\n              <td>{item['Country Code']}</td>\n              <td>{item['Indicator Name']}</td>\n              <td>{item['Indicator Code']}</td>\n              {years.map((year) => (\n                <td key={year}>{item[year]}</td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default DataDisplay;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}