{"ast":null,"code":"var _jsxFileName = \"/Users/aneesansaar/Documents/Anees Documents/React Application/ReactFrontend/src/file_upload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./styles.css\"; // Import your CSS for styling\n\n//Alertbox to create alert when file is uploaded\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AlertPopup({\n  message,\n  onClose\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alert-popup\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close\",\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_c = AlertPopup;\nfunction FileUpload() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [showAlert, setShowAlert] = useState(false);\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (selectedFile) {\n      const formData = new FormData();\n      formData.append(\"csv_file\", selectedFile);\n      try {\n        await axios.post(\"http://localhost:8000/api/upload_csv/\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        // Set the success message, clear the selected file, and show the alert\n        setAlertMessage(\"CSV file uploaded successfully\");\n        setSelectedFile(null);\n        setShowAlert(true);\n      } catch (error) {\n        console.error(\"Error uploading CSV file:\", error);\n        // Handle and display the error in your UI\n        setAlertMessage(\"Error uploading CSV file: \" + error.message);\n        setShowAlert(true);\n      }\n    } else {\n      // Handle the case when no file is selected\n      setAlertMessage(\"Please select a CSV file to upload\");\n      setShowAlert(true);\n    }\n  };\n  const closeAlert = () => {\n    setShowAlert(false);\n    // Refresh the page\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload Your Data to View\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input\",\n      type: \"file\",\n      accept: \".csv\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: handleUpload,\n      children: \"Upload CSV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), showAlert && /*#__PURE__*/_jsxDEV(AlertPopup, {\n      message: alertMessage,\n      onClose: closeAlert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(FileUpload, \"fmkY1Zthl6AMQUWZCGI8+2KlLFE=\");\n_c2 = FileUpload;\nexport default FileUpload;\nvar _c, _c2;\n$RefreshReg$(_c, \"AlertPopup\");\n$RefreshReg$(_c2, \"FileUpload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","AlertPopup","message","onClose","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","FileUpload","_s","selectedFile","setSelectedFile","alertMessage","setAlertMessage","showAlert","setShowAlert","handleFileChange","event","target","files","handleUpload","formData","FormData","append","post","headers","error","console","closeAlert","window","location","reload","type","accept","onChange","_c2","$RefreshReg$"],"sources":["/Users/aneesansaar/Documents/Anees Documents/React Application/ReactFrontend/src/file_upload.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./styles.css\"; // Import your CSS for styling\n\n//Alertbox to create alert when file is uploaded\nfunction AlertPopup({ message, onClose }) {\n  return (\n    <div className=\"alert-popup\">\n      <div className=\"alert-content\">\n        <span className=\"close\" onClick={onClose}>\n          &times;\n        </span>\n        <p>{message}</p>\n      </div>\n    </div>\n  );\n}\n\nfunction FileUpload() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleFileChange = (event) => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  const handleUpload = async () => {\n    if (selectedFile) {\n      const formData = new FormData();\n      formData.append(\"csv_file\", selectedFile);\n\n      try {\n        await axios.post(\"http://localhost:8000/api/upload_csv/\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        });\n        // Set the success message, clear the selected file, and show the alert\n        setAlertMessage(\"CSV file uploaded successfully\");\n        setSelectedFile(null);\n        setShowAlert(true);\n      } catch (error) {\n        console.error(\"Error uploading CSV file:\", error);\n        // Handle and display the error in your UI\n        setAlertMessage(\"Error uploading CSV file: \" + error.message);\n        setShowAlert(true);\n      }\n    } else {\n      // Handle the case when no file is selected\n      setAlertMessage(\"Please select a CSV file to upload\");\n      setShowAlert(true);\n    }\n  };\n\n  const closeAlert = () => {\n    setShowAlert(false);\n    // Refresh the page\n    window.location.reload();\n  };\n\n  return (\n    <div>\n      <h1>Upload Your Data to View</h1>\n      <input\n        className=\"input\"\n        type=\"file\"\n        accept=\".csv\"\n        onChange={handleFileChange}\n      />\n      <button className=\"button\" onClick={handleUpload}>\n        Upload CSV\n      </button>\n      {showAlert && <AlertPopup message={alertMessage} onClose={closeAlert} />}\n    </div>\n  );\n}\n\nexport default FileUpload;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}